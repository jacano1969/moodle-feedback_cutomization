--- lib.php.old	2012-10-24 10:34:39.939367076 +0500
+++ lib.php	2012-10-24 10:34:39.937367076 +0500
@@ -12,7 +12,7 @@ define('FEEDBACK_MULTICHOICERATED_LINE_S
 define('FEEDBACK_MULTICHOICERATED_ADJUST_SEP', '<<<<<');
 define('FEEDBACK_MULTICHOICERATED_IGNOREEMPTY', 'i');
 define('FEEDBACK_MULTICHOICERATED_HIDENOSELECT', 'h');
-
+session_start();
 class feedback_item_multichoicerated extends feedback_item_base {
     var $type = "multichoicerated";
     var $commonparams;
@@ -104,6 +104,7 @@ class feedback_item_multichoicerated ext
     //liefert ein eindimensionales Array mit drei Werten(typ, name, XXX)
     //XXX ist ein eindimensionales Array (Mittelwert der Werte der Antworten bei Typ Radio_rated) Jedes Element ist eine Struktur (answertext, avg)
     function get_analysed($item, $groupid = false, $courseid = false) {
+    	
         $analysedItem = array();
         $analysedItem[] = $item->typ;
         $analysedItem[] = $item->name;
@@ -113,12 +114,12 @@ class feedback_item_multichoicerated ext
         $lines = null;
         $lines = explode (FEEDBACK_MULTICHOICERATED_LINE_SEP, $info->presentation);
         if(!is_array($lines)) return null;
-
+		
         //die Werte holen
+        
         $values = feedback_get_group_values($item, $groupid, $courseid, $this->ignoreempty($item));
         if(!$values) return null;
         //schleife ueber den Werten und ueber die Antwortmoeglichkeiten
-
         $analysedAnswer = array();
         $sizeoflines = sizeof($lines);
         for($i = 1; $i <= $sizeoflines; $i++) {
@@ -134,10 +135,12 @@ class feedback_item_multichoicerated ext
                     $anscount++;
                 }
             }
+			
             $ans->answercount = $anscount;
             $ans->avg = doubleval($avg) / doubleval(sizeof($values));
             $ans->value = $item_values[0];
             $ans->quotient = $ans->answercount / sizeof($values);
+			
             $analysedAnswer[] = $ans;
         }
         $analysedItem[] = $analysedAnswer;
@@ -165,7 +168,8 @@ class feedback_item_multichoicerated ext
     }
 
     function print_analysed($item, $itemnr = '', $groupid = false, $courseid = false) {
-        $sep_dec = get_string('separator_decimal', 'feedback');
+        $_SESSION['questions']++;
+    	$sep_dec = get_string('separator_decimal', 'feedback');
         if(substr($sep_dec, 0, 2) == '[['){
             $sep_dec = FEEDBACK_DECIMAL;
         }
@@ -194,48 +198,228 @@ class feedback_item_multichoicerated ext
                 $pixwidth = intval($val->quotient * FEEDBACK_MAX_PIX_LENGTH);
 
                 $avg += $val->avg;
+                $score+=$val->value*$val->answercount;
                 $quotient = number_format(($val->quotient * 100), 2, $sep_dec, $sep_thous);
                 echo '<tr><td align="left" valign="top">-&nbsp;&nbsp;' . trim($val->answertext) . ' ('.$val->value.'):</td><td align="left" style="width: '.FEEDBACK_MAX_PIX_LENGTH.'"><img alt="'.$intvalue.'" src="'.$pix.'" height="5" width="'.$pixwidth.'" />' . $val->answercount. (($val->quotient > 0)?'&nbsp;('. $quotient . '&nbsp;%)':'') . '</td></tr>';
             }
             $avg = number_format(($avg), 2, $sep_dec, $sep_thous);
+            $_SESSION['percntavg'] += $avg;
             echo '<tr><td align="left" colspan="2"><b>'.get_string('average', 'feedback').': '.$avg.'</b></td></tr>';
+            echo '<tr><td align="left" colspan="2"><b>'.get_string('score', 'feedback').': '.$score.'</b></td></tr>';
+            //echo '<tr><td align="left" colspan="2"><b>'.get_string('average', 'feedback').': '.$avg.'</b></td></tr>';
             //echo '</table>';
         }
         // return $itemnr;
     }
 
     function excelprint_item(&$worksheet, $rowOffset, $xlsFormats, $item, $groupid, $courseid = false) {
+    	$_SESSION['questions']++;
+     	$sep_dec = get_string('separator_decimal', 'feedback');
+        if(substr($sep_dec, 0, 2) == '[['){
+            $sep_dec = FEEDBACK_DECIMAL;
+        }
+
+        $sep_thous = get_string('separator_thousand', 'feedback');
+        if(substr($sep_thous, 0, 2) == '[['){
+            $sep_thous = FEEDBACK_THOUSAND;
+        }
         $analysed_item = $this->get_analysed($item, $groupid, $courseid);
 
         $data = $analysed_item[2];
-
+		$label=$_SESSION['count'];
+		
         // $worksheet->setFormat("<l><f><ro2><vo><c:green>");
         //frage schreiben
-        $worksheet->write_string($rowOffset, 0, $item->label, $xlsFormats->head2);
+        //$worksheet->write_string($rowOffset, 0, $item->label, $xlsFormats->head2);
+        $sizeofdata = sizeof($data);
+        if($_SESSION['count']==1){
+        	for($i = 0; $i < $sizeofdata; $i++) {  
+        		$aData = $data[$i];
+				$worksheet->write_string($rowOffset, $i + 1, trim($aData->answertext).' ('.$aData->value.')', $xlsFormats->value_bold);				
+        	}
+        	$worksheet->write_string($rowOffset, sizeof($data) + 1, get_string('average', 'feedback'), $xlsFormats->value_bold);
+        	$worksheet->write_string($rowOffset, sizeof($data) + 2, get_string('score', 'feedback'), $xlsFormats->value_bold);
+        
+        }
+        $rowOffset+=2;
+        
+        $worksheet->write_string($rowOffset, 0,  $label, $xlsFormats->head2);
+		//$worksheet->write_number($rowOffset , 0, $count, $xlsFormats->value_bold);
         $worksheet->write_string($rowOffset, 1, $analysed_item[1], $xlsFormats->head2);
         if(is_array($data)) {
             $avg = 0.0;
+            $score=0.0;
             $sizeofdata = sizeof($data);
             for($i = 0; $i < $sizeofdata; $i++) {
                 $aData = $data[$i];
-
+                $_SESSION['datasize']=$sizeofdata;
+                $_SESSION[$i]+=$aData->answercount;
+                
+	           
                 // $worksheet->setFormat("<l><f><ro2><vo><c:blue>");
-                $worksheet->write_string($rowOffset, $i + 2, trim($aData->answertext).' ('.$aData->value.')', $xlsFormats->value_bold);
-
+               
                 // $worksheet->setFormat("<l><vo>");
-                $worksheet->write_number($rowOffset + 1, $i + 2, $aData->answercount, $xlsFormats->default);
+                $worksheet->write_number($rowOffset + 1, $i + 1, $aData->answercount, $xlsFormats->default);
                 //$worksheet->setFormat("<l><f><vo>");
                 //$worksheet->write_number($rowOffset + 2, $i + 1, $aData->avg);
+                $score+=$aData->value*$aData->answercount;//count score
                 $avg += $aData->avg;
             }
             //mittelwert anzeigen
             // $worksheet->setFormat("<l><f><ro2><vo><c:red>");
-            $worksheet->write_string($rowOffset, sizeof($data) + 2, get_string('average', 'feedback'), $xlsFormats->value_bold);
+            
+            // $worksheet->setFormat("<l><f><vo>");
+            $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
+            $avgs = sprintf("%01.2f", $avg);
+            
+            $worksheet->write_number($rowOffset + 1, sizeof($data) + 1, $avgs, $xlsFormats->value_bold);
+			///score print
+            //$worksheet->write_string($rowOffset+1, sizeof($data) + 2, get_string('score', 'feedback'), $xlsFormats->value_bold);
+            $worksheet->write_number($rowOffset + 1, sizeof($data) + 2, $score, $xlsFormats->value_bold);
+			//end of score
+            $_SESSION['totalavg'] += $avg;
+        }
+        $rowOffset +=1 ;
+        return $rowOffset;
+    }
+
+//print pdf Added By Hina Yousuf    
+function pdfprint_item(&$content, $item, $groupid, $courseid = false) {
+    	$_SESSION['questions']++;
+     	$sep_dec = get_string('separator_decimal', 'feedback');
+        if(substr($sep_dec, 0, 2) == '[['){
+            $sep_dec = FEEDBACK_DECIMAL;
+        }
+
+        $sep_thous = get_string('separator_thousand', 'feedback');
+        if(substr($sep_thous, 0, 2) == '[['){
+            $sep_thous = FEEDBACK_THOUSAND;
+        }
+        $analysed_item = $this->get_analysed($item, $groupid, $courseid);
+
+        $data = $analysed_item[2];
+		$label=$_SESSION['count'];
+        $sizeofdata = sizeof($data);
+        if($_SESSION['count']==1){
+        	$content = $content.'<td width="8%"><b>'.'S/NO.'.'</b></td>';
+        	for($i = 0; $i < $sizeofdata; $i++) {  
+        		$aData = $data[$i];
+        		$content = $content.'<td width="15%"><b>'.trim($aData->answertext).' ('.$aData->value.')'.'</b></td>';       	        					
+        	}
+        	$content = $content.'<td width="10%"><b>'.get_string('average', 'feedback').'</b></td>';
+        	$content = $content.'<td width="10%"><b>'.get_string('score', 'feedback').'</b></td></tr>';
+        }
+        $rowOffset+=2;
+        $content = $content.'<tr><td width="8%"><b>'.$label.'</b></td>';
+		$content = $content.'<td colspan= "7" width="95%"><b>'.$analysed_item[1].'</b></td></tr>';
+        if(is_array($data)) {
+        	$content = $content.'<tr><td width="8%"><b>'.''.'</b></td>';
+            $avg = 0.0;
+            $score=0.0;
+            $sizeofdata = sizeof($data);
+            for($i = 0; $i < $sizeofdata; $i++) {
+                $aData = $data[$i];
+                $_SESSION['datasize']=$sizeofdata;
+                $_SESSION[$i]+=$aData->answercount;  
+                $content = $content.'<td width="15%">'.$aData->answercount.'</td>';                          
+                $score+=$aData->value*$aData->answercount;//count score
+                $avg += $aData->avg;
+            }
+            $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
+            $avgs = sprintf("%01.2f", $avg);
+            $content = $content.'<td width="10%"><b>'.$avgs.'</b></td>'; 
+            $content = $content.'<td width="10%"><b>'.$score.'</b></td></tr>'; 
+           
+            $_SESSION['totalavg'] += $avg;
+        }
+       
+    }
+    //end of pdf
+
+    /***********Get Data for Drawing graph**********************/
+function graph_item($item, $groupid, $courseid = false) {
+         $sep_dec = get_string('separator_decimal', 'feedback');
+        if(substr($sep_dec, 0, 2) == '[['){
+            $sep_dec = FEEDBACK_DECIMAL;
+        }
+
+        $sep_thous = get_string('separator_thousand', 'feedback');
+        if(substr($sep_thous, 0, 2) == '[['){
+            $sep_thous = FEEDBACK_THOUSAND;
+        }
+        $analysed_item = $this->get_analysed($item, $groupid, $courseid);
 
+        $data = $analysed_item[2];
+        $label=$_SESSION['count'];
+        
+        // $worksheet->setFormat("<l><f><ro2><vo><c:green>");
+        //frage schreiben
+        //$worksheet->write_string($rowOffset, 0, $item->label, $xlsFormats->head2);
+        $sizeofdata = sizeof($data);
+        if($_SESSION['count']==1){
+		
+ // adds it to our session 
+ 
+            for($i = 0; $i < $sizeofdata; $i++) {  
+                $aData = $data[$i];
+				
+				$_SESSION['text'][]=$aData->answertext;
+             }
+			  
+           
+        }
+        $rowOffset+=2;
+        
+         if(is_array($data)) {
+            $avg = 0.0;
+            $score=0.0;
+            $sizeofdata = sizeof($data);
+            for($i = 0; $i < $sizeofdata; $i++) {
+                $aData = $data[$i];
+                $_SESSION['datasize']=$sizeofdata;
+                $_SESSION[$i]+=$aData->answercount;
+                
+                $score+=$aData->value*$aData->answercount;//count score
+                $avg += $aData->avg;
+            }
+            //mittelwert anzeigen
+            // $worksheet->setFormat("<l><f><ro2><vo><c:red>");
+            
             // $worksheet->setFormat("<l><f><vo>");
-            $worksheet->write_number($rowOffset + 1, sizeof($data) + 2, $avg, $xlsFormats->value_bold);
+            $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
+            $avgs = sprintf("%01.2f", $avg);
+            
+        }
+        $rowOffset +=1 ;
+        return $rowOffset;
+    }
+    
+    /***********Get Data for Feedback Report**********************/
+    
+ function get_average( $item, $groupid, $courseid = false) {
+     	$_SESSION['questions']++;
+        $analysed_item = $this->get_analysed($item, $groupid, $courseid);
+		
+        $data = $analysed_item[2];
+		
+        if(is_array($data)) {
+        	
+            $avg = 0.0;
+            $score=0.0;
+            $sizeofdata = sizeof($data);
+            for($i = 0; $i < $sizeofdata; $i++) {
+            	
+                $aData = $data[$i];
+                
+                $avg += $aData->avg;
+            }
+            
+            
+           
+            
+             $_SESSION['totalavg']+= $avg;
         }
-        $rowOffset +=2 ;
+       
         return $rowOffset;
     }
 
@@ -302,11 +486,12 @@ class feedback_item_multichoicerated ext
 
         //print the question and label
         echo '<div class="feedback_item_label_'.$align.$highlight.'">';
-            echo format_text($item->name.$requiredmark, true, false, false);
+            echo "<font size='3'><b>".format_text($item->name.$requiredmark, true, false, false)."</b></font>";
         echo '</div>';
 
         //print the presentation
         echo '<div class="feedback_item_presentation_'.$align.$highlight.'">';
+        echo "<font size='3'>";
         switch($info->subtype) {
             case 'r':
                 $this->print_item_radio($item, $value, $info, $align, false, $lines);
@@ -315,6 +500,7 @@ class feedback_item_multichoicerated ext
                 $this->print_item_dropdown($item, $value, $info, $align, false, $lines);
                 break;
         }
+        echo"</font>";
         echo '</div>';
     }
 
